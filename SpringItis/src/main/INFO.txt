1) Servlet - компонент, обрабатывающий HTTP-запросы
2) SpringContext - список бинов (конфигурация, может быть как xml, так и java-класс)
3) Если мы хотим, чтобы контекст спринга был видел в сервлетах, необходимо использовать listener, с помощью которого
в контекст сервлетов мы кладем контекст спринга
4) Controller - интерфейс-компонент, обрабатывающий HTTP-запросы в контексте Spring
5) DispatcherServlet - реализация паттерна FrontController, представляет собой сервлет, принимающий все запросы
и отдающий запросы контроллерам (подробнее см. схему)
6) Для того, чтобы DispatcherServlet работал со Spring конфигурацией (xml) необходимо создать конфиг. файл спринга
и назвать его dispatcher-servlet.xml
7) Чтобы работать с Spring-конфигурацией на аннотациях необходимо настроить пути (см. web.xml)
8) Как DispatcherServlet определяет, какому контроллеру нужно отдать данные?
Используется HandlerMappring (по умолчанию этот интерфейс реализован BeanNameUrlHandlerMapping),
что позволяет определить какой контроллер должен быть вызван по имени бина этого контроллера